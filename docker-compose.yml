version: '3.8'

services:
  # FastAPI 後端服務 (需要訪問主機藍牙)
  fastapi:
    build:
      context: .
      dockerfile: ./bms-monitor/Dockerfile
    container_name: battery-fastapi
    restart: unless-stopped
    network_mode: "host"  # 使用主機網路以訪問藍牙
    privileged: true      # 特權模式訪問硬體
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - MQTT_BROKER_URL=${MQTT_BROKER_URL}
      - BMS_MAC_ADDRESS=${BMS_MAC_ADDRESS}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./bms-monitor/app:/app/app
      - /var/run/dbus:/var/run/dbus:rw  # D-Bus 連接藍牙
      - /sys/fs/cgroup:/sys/fs/cgroup:ro  # cgroup 訪問
    devices:
      - /dev/bus/usb:/dev/bus/usb
    cap_add:
      - NET_RAW
      - NET_ADMIN
      - SYS_ADMIN
    depends_on:
      - postgres
      - redis
      - mqtt
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL 資料庫
  postgres:
    image: postgres:15-alpine
    container_name: battery-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d battery_monitor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 緩存
  redis:
    image: redis:7-alpine
    container_name: battery-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # MQTT Broker
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: battery-mqtt
    restart: unless-stopped
    volumes:
      - ./battery-monitor/docker/mosquitto/config:/mosquitto/config
      - ./battery-monitor/docker/mosquitto/data:/mosquitto/data
      - ./battery-monitor/docker/mosquitto/log:/mosquitto/log
    ports:
      - "1884:1883"  # 避免與系統 MQTT 衝突
      - "9002:9001"
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_sub -t '$$SYS/#' -C 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端 Web 界面 (待實作)
  # TODO: 實作前端專案後啟用此服務
  # frontend:
  #   build: ./frontend
  #   ports: ["80:80"]
  #   depends_on: [fastapi]
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8000

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: battery-network
    driver: bridge