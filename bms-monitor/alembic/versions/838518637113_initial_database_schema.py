"""Initial database schema

Revision ID: 838518637113
Revises: 
Create Date: 2025-08-29 16:04:09.773525

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '838518637113'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('battery_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('threshold', sa.Float(), nullable=True),
    sa.Column('cell', sa.Integer(), nullable=True),
    sa.Column('acknowledged', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_battery_alerts_id'), 'battery_alerts', ['id'], unique=False)
    op.create_index(op.f('ix_battery_alerts_timestamp'), 'battery_alerts', ['timestamp'], unique=False)
    op.create_table('battery_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('total_voltage', sa.Float(), nullable=True),
    sa.Column('current', sa.Float(), nullable=True),
    sa.Column('power', sa.Float(), nullable=True),
    sa.Column('soc', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('cells', sa.Text(), nullable=True),
    sa.Column('temperatures', sa.Text(), nullable=True),
    sa.Column('connection_status', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_battery_data_id'), 'battery_data', ['id'], unique=False)
    op.create_index(op.f('ix_battery_data_timestamp'), 'battery_data', ['timestamp'], unique=False)
    op.create_table('system_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('connected', sa.Boolean(), nullable=True),
    sa.Column('last_read', sa.DateTime(), nullable=True),
    sa.Column('read_count', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('uptime', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_status_id'), 'system_status', ['id'], unique=False)
    op.create_index(op.f('ix_system_status_timestamp'), 'system_status', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_system_status_timestamp'), table_name='system_status')
    op.drop_index(op.f('ix_system_status_id'), table_name='system_status')
    op.drop_table('system_status')
    op.drop_index(op.f('ix_battery_data_timestamp'), table_name='battery_data')
    op.drop_index(op.f('ix_battery_data_id'), table_name='battery_data')
    op.drop_table('battery_data')
    op.drop_index(op.f('ix_battery_alerts_timestamp'), table_name='battery_alerts')
    op.drop_index(op.f('ix_battery_alerts_id'), table_name='battery_alerts')
    op.drop_table('battery_alerts')
    # ### end Alembic commands ###
